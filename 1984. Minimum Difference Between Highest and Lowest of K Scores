int min(int a, int b) {
    if (a < b) return a;
    else return b;
}

int cmp(const void *a, const void *b) {
     return *(int*)a - *(int*)b;
}

int minimumDifference(int* nums, int numsSize, int k){
    if (k == 1) return 0;

    qsort(nums, numsSize, sizeof(int), cmp);

    int result = 1000000;
    for (int i = 0; i <= numsSize - k; i++) {
        result = min(nums[i + k - 1] - nums[i], result);
    }
    
    return result;
}
c2:
class Solution {
public:
    int minimumDifference(vector<int>& nums, int k) {
        int i = 0;
        int j = k-1;
        sort(nums.begin(), nums.end());
        int n = nums.size();
        int ans =INT_MAX;
        while(j<n){
           ans = min(ans,nums[j++]-nums[i++]);
        }
        return ans;
    }
};
