class Solution {
public:
    long long maximumSubarraySum(vector<int>& nums, int k) {
        
        map<int,int> mp;
        int i=0,j=0;

        // this will store the answer.
        long long mx=0;
        long long sum=0;

        while(j<nums.size())
        {
            // insert it into the map.
            mp[nums[j]]++;
            sum+=nums[j];


            if(j-i+1<k) j++;
            else if(j-i+1==k)
            {
                // if size of window is matched and all elements are different.
                if(mp.size()==k) 
                {
                    mx=max(mx,sum);
                }

                // remove the count of nums[i]
                mp[nums[i]]--;

                // if count becomes zero, then remove it from map.
                if(mp[nums[i]]==0) mp.erase(nums[i]);
                sum-=nums[i];

                // to slide the window.
                i++,j++;
            }
        }
        return mx;

    }
};
