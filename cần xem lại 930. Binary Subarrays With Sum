Intuition
Sliding Window Concept

Approach
countSubArrs(nums,goal) is a function that counts the subarrays which has sum less than or equal to goal.
Therefore, countSubArrs(nums,goal)-countSubArrs(nums,goal-1) gives you the count of subarrays that has sum exactly equal to goal;

The j to i window represents the subarrays. We use the i pointer to expand the window, when the sum of all numbers in the window is bigger than goal, it's time for us to move the j pointer to shorten the window. Through this process, we can count the number of the subarrays.

Complexity
Time complexity:O(N)
Space complexity:O(1)
Code

class Solution {
public:
    int numSubarraysWithSum(vector<int>& nums, int goal) {
        return countSubArrs(nums,goal)-countSubArrs(nums,goal-1);
    }
    int countSubArrs(vector<int>&nums,int sum){
        if(sum<0) return 0;
        int preSum=0,j=0,count=0;
        for(int i=0;i<nums.size();i++){
            preSum+=nums[i];
            while(preSum>sum){
                preSum-=nums[j++];
            }
            count+=(i-j+1);  //this counts the subarrays in that window.
        }
        return count;
    }
};
