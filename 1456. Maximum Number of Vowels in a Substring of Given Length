class Solution {
public:
    int maxVowels(string &s, int &k) {
        int ans = 0, x = 0, i , n = s.length();
        k--;
        for(i = 0; i < n; i++){
            if(i<k){
                if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'){
                    x++;
                }
            }else{
                if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'){
                    x++;
                }
                ans = max(x,ans);
                
                if(s[i-k]=='a'||s[i-k]=='e'||s[i-k]=='i'||s[i-k]=='o'||s[i-k]=='u'){
                    x--;
                }
            }
        }
        return ans;
    }
};
C2:

class Solution {
public:
    bool isvowel(char c){
        return c=='a' or c=='e' or c=='i' or c=='o' or c=='u';
    }
    int maxVowels(string s, int k) {
        int i=0;
        int j=0;
        int n=s.size();
        int len=0;
        int ctv=0;
        int res=0;
		//Code starts
        while(j<n){
            if(isvowel(s[j])){
                ctv++;
            }
            len++;
            if(len>k){
                if(isvowel(s[i])){
                    ctv--;
                }
                i++;
            }
            res=max(res,ctv);
            j++;
        }
        return res;
    }
};
